<!DOCTYPE html>
<!---Coding By CodingLab | www.codinglabweb.com--->
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <style>
        /* Import Google font - Poppins */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}
body {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
  background: rgb(35, 16, 132);
}
.container {
  position: relative;
  max-width: 700px;
  width: 100%;
  background: #fff;
  padding: 25px;
  border-radius: 8px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
}
.container header {
  font-size: 1.5rem;
  color: #333;
  font-weight: 500;
  text-align: center;
}
.container .form {
  margin-top: 30px;
}
.form .input-box {
  width: 100%;
  margin-top: 20px;
}
.input-box label {
  color: #333;
}
.form :where(.input-box input, .select-box) {
  position: relative;
  height: 50px;
  width: 100%;
  outline: none;
  font-size: 1rem;
  color: #707070;
  margin-top: 8px;
  border: 1px solid #ddd;
  border-radius: 6px;
  padding: 0 15px;
}
.input-box input:focus {
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
}
.form .column {
  display: flex;
  column-gap: 15px;
}
.form .gender-box {
  margin-top: 20px;
}
.gender-box h3 {
  color: #333;
  font-size: 1rem;
  font-weight: 400;
  margin-bottom: 8px;
}
.form :where(.gender-option, .gender) {
  display: flex;
  align-items: center;
  column-gap: 50px;
  flex-wrap: wrap;
}
.form .gender {
  column-gap: 5px;
}
.gender input {
  accent-color: rgb(130, 106, 251);
}
.form :where(.gender input, .gender label) {
  cursor: pointer;
}
.gender label {
  color: #707070;
}
.address :where(input, .select-box) {
  margin-top: 15px;
}
.select-box select {
  height: 100%;
  width: 100%;
  outline: none;
  border: none;
  color: #707070;
  font-size: 1rem;
}
.form button {
  height: 55px;
  width: 100%;
  color: #fff;
  font-size: 1rem;
  font-weight: 400;
  margin-top: 30px;
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
  background: rgb(130, 106, 251);
}
.form button:hover {
  background: rgb(88, 56, 250);
}
/*Responsive*/
@media screen and (max-width: 500px) {
  .form .column {
    flex-wrap: wrap;
  }
  .form :where(.gender-option, .gender) {
    row-gap: 15px;
  }
}
    </style>
  </head>
  <body>
    <section class="container">
      <header>Greviance Form</header>
      <form action="/complaint" class="form" method="post">
        <div class="select-box">
            <select id="type_of_complaint" name="type_of_complaint" required>
              <option value="toc">Type of Complaint</option>
                <option value="electricity">Electricity</option>
                <option value="cleaning">Cleaning</option>
                <option value="plumber">Plumber</option>
                <option value="electronic">Electronic</option>
              </select>
        </div>
        <div class="select-box">
            <select id="prblm" name="prblm" required>
              </select>
        </div>
        <div class="input-box">
          <label>Description</label>
          <input type="textarea" name="description" placeholder="Description" required />
        </div>

        <div class="column">
          <div class="input-box">
            <label>Material/Gadget </label>
            <input type="text" name="material" placeholder="Enter Name of Material/Gadget" required />
          </div>
        </div>
        
        <button>Submit</button>
      </form>
    </section>
    <script>
        
        var firstSelect = document.getElementById('type_of_complaint');
        var secondSelect = document.getElementById('prblm');

        // Define options for the second select based on the selection in the first select
        var options = {
          toc:[],
        electricity: ['Type of Problem','Not  Working Properly','Requirement','Replace','Broken','Others'],
        cleaning: ['Type of Problem','Washrooms','Surroundings','Others'],plumber:['Broken','Replace','Not  Working Properly'],
        electronic :['Type of Problem','Requirement','Replace','Not  Working Properly','Others']
        };

        // Function to update options in the second select based on the selection in the first select
        function updateSecondSelect() {
        var selectedCategory = firstSelect.value;
        secondSelect.innerHTML = ''; // Clear existing options
        
        options[selectedCategory].forEach(function(option) {
            var newOption = document.createElement('option');
            newOption.textContent = option;
            secondSelect.appendChild(newOption);
        });
        }

        // Call the function initially to populate options based on the initial selection
        updateSecondSelect();

        // Add event listener to the first select to update options in the second select when selection changes
        firstSelect.addEventListener('change', updateSecondSelect);

    </script>
  </body>
</html>